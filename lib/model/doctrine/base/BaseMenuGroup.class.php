<?php

/**
 * BaseMenuGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $index
 * @property string $name
 * @property string $slug
 * @property integer $parent_id
 * @property integer $type
 * @property Doctrine_Collection $Items
 * 
 * @method integer             getIndex()     Returns the current record's "index" value
 * @method string              getName()      Returns the current record's "name" value
 * @method string              getSlug()      Returns the current record's "slug" value
 * @method integer             getParentId()  Returns the current record's "parent_id" value
 * @method integer             getType()      Returns the current record's "type" value
 * @method Doctrine_Collection getItems()     Returns the current record's "Items" collection
 * @method MenuGroup           setIndex()     Sets the current record's "index" value
 * @method MenuGroup           setName()      Sets the current record's "name" value
 * @method MenuGroup           setSlug()      Sets the current record's "slug" value
 * @method MenuGroup           setParentId()  Sets the current record's "parent_id" value
 * @method MenuGroup           setType()      Sets the current record's "type" value
 * @method MenuGroup           setItems()     Sets the current record's "Items" collection
 * 
 * @package    marcel
 * @subpackage model
 * @author     Dziamid
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMenuGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('menu_group');
        $this->hasColumn('index', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('type', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MenuItem as Items', array(
             'local' => 'id',
             'foreign' => 'menu_group_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}
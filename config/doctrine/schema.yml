Bill:
  actAs:
    Timestampable: ~
  columns:
    number:
      type: integer
      unique: true
    desk_id: integer
    open:
      type: boolean
      notnull: true
      default: false
    is_printed:
      type: boolean
      default: false
    # don't display in 'special' statistics
    is_hidden:
      type: boolean
      default: false
    with_discount:
      type: boolean
      default: false
  relations:
    Item:
      local: id
      foreign: bill_id
      alias: Items
      foreignAlias: Bill
      type: many
      foreignType: one
      cascade: [delete]
    Desk:
      local: desk_id
      foreign: id
      foreignAlias: Bills

Item:
  actAs:
    Timestampable: ~
  columns:
    menu_item_id: integer
    bill_id: integer
    quantity: integer
    price: integer(10)
  relations:
    MenuItem:
      local: menu_item_id
      foreign: id
      type: one
      foreignType: one

Desk:
  actAs:
    Timestampable: ~
  columns:
    index: integer
    number:
      type: string(20)
      unique: true
    
MenuItem:
  actAs:
    Timestampable: ~
    SoftDelete: ~
  columns:
    name: string(255)
    price: integer(10)
    menu_group_id: integer
    index: integer
    is_active:
      type: boolean
      default: true
    discount: integer(3)

MenuGroup:
  actAs:
    Timestampable: ~
    SoftDelete: ~
    NestedSet:
      hasManyRoots: true
      rootColumnName: root_id
  columns:
    index: integer
    name: string(255)
    slug: string(255)
    
    # this is not required in a nested set model, for I need a very fast read
    # of parent id, so I store it here
    parent_id: integer(4)
    
    # type - kitchen (1), bar (2)
    type:
      type: integer
      default: 1
      notnull: true
  relations:
    MenuItem:
      type: many
      foreignType: one
      local: id
      foreign: menu_group_id
      alias: Items
      foreignAlias: Group
      cascade: [delete]
      
Component:
  actAs:
    Timestampable: ~
  columns:
    name: string(255)
    amount: integer